#+TITLE: 日志
#+AUTHOR: yongfeizhai
# #+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../static/css/style.css"/>
# #+SETUPFILE: ./org/theme-bigblow.setup
#+OPTIONS: toc:nil

#+begin_quote
不积跬步，无以至千里；不积小流，无以成江海！
#+end_quote

* 两个整数最小公倍数相关定理的证明
CREATE: <2022-03-31 四>

文章仅供备忘，所以排版格式不是很规范

** 设两个互质的数分别为 a，b ，证明其最小公倍数为 ab

反证：假设存在 K < ab 为 a, b 的最小公倍数。
则 K/a，K/b 为整数，不妨设为 m,n。结合 K < ab 的假设。有：

m = K/a < ab/a = b , n = K/b < ab/b < b

又

a · m = a · K/a = K = K/b · b = n · b

得

am/b = n

由于 a，b 互质，且 m < b. 所以等式左边不为整数。而等式右边是整数。

矛盾，故假设不成立。

** 设 a, b 为整数。其最大公约数为 s. 则其最小公倍数为 ab/s

设 a = sx, b = sy

反证：假设存在 K < ab/s = sxy 为 a, b 的最小公倍数
则 K/a ，K/b 为整数，不妨设为 m,n ，则有

m = K/a < sxy/sx = y
n = K/b < sxy/sy = x

且

a · m = a · K/a = K = K/b · b = n · b

» sxm = am = nsy
» xm=ny
» m = ny/x

因为 x,y 互质，且 n < x, 右边不为整数。而左边为整数。

矛盾，故假设不成立。

* 发现一个现象：使用键盘和鼠标的第一关注点是不一样的（光标还是内容）
CREATE: <2022-01-21 Fri 23:56>

当我在 Emacs 使用键盘的时候，我第一个找的东西是光标（这是一个下意识的
动作），而当我用鼠标的时候，我并不会关注光标在什么地方，因为我用鼠标一
点我所看的位置，光标将会立刻跳转到这个地方，所以我在使用鼠标的时候关注
的是页面的内容。

这个小小的差异是我今天在使用 Ibuffer 的时候发现的（用鼠标），因为之前
键盘驱动地使用 Ibuffer 的时候，我第一时间（下意识）会去找光标，然后再
去看 Ibuffer 给我呈现的内容（当我的视觉中心是光标的时候，我是看不清楚
内容的，因为我的关注点并不在内容上面），所以在这样的观察前提下，我会觉
得 Ibuffer 的内容很不明显，总是会出现不知道我在哪里的情况。我想这应该
是我 Ibuffer用不起来的一个重要原因，之前在 Bs 和 Ibuffer 对比的时候，
还出现了错误归因：说 Ibuffer 用不起来是其设计的原因。

当然不止 Ibuffer ，使用 Dired 的时候也会因为找光标时常出现不知道自己在
哪里的情况。

这是我在使用 Emacs 的时候出现的问题，我以后会去注意自己的关注的内容到
底是什么，可能会更自如地去使用 Emacs 吧。同时也希望我的这次分享能给读
者一点小小的启发 ^_^

* 快速在相同 Major-mode 的 Buffer 中切换
CREATE: <2022-01-20 Thu 20:30>

今天在使用 [[https://www.gnu.org/software/emacs/manual/html_mono/eshell.html][Eshell]] 的时候发现了一个需求：我想快速在几个已打开的 Eshell
中切换。搜了一下，发现了[[https://emacs.stackexchange.com/questions/65094/how-to-quickly-cycles-through-buffers-of-the-same-major-mode-as-current-one][这个]]。里面提到了一个 Emacs 的内置包 =bs.el=

我便去尝试了一下，简单配置后发现可以满足我的需求。分享给大家

#+begin_src emacs-lisp
  (global-set-key (kbd "C-x C-b") 'bs-show)
  (setq bs-configurations
        '(("all" nil nil nil nil nil)
          ("files" nil nil nil bs-visits-non-file bs-sort-buffer-interns-are-last)
          ("eshell" nil nil nil fei-bs-not-eshell bs-sort-buffer-interns-are-last)
          ("files-and-scratch" "^\\*scratch\\*$" nil nil bs-visits-non-file bs-sort-buffer-interns-are-last)
          ("all-intern-last" nil nil nil nil bs-sort-buffer-interns-are-last))
        )

  (defun fei-bs-not-eshell (buf)
    (with-current-buffer buf (not (eq major-mode 'eshell-mode))))
#+end_src

** 题外话
如果你已经有了一定的 Emacs 使用经验，你可能将 =C-x C-b= 绑定到了
=ibuffer= 上面，我之前也是这么做，但是我在使用 Emacs 的很长一段时间里，
发现 =ibuffer= 一直用不起来。倒是这个 =bs= 我一下子就 get 到了他的设计
想法，很快就用起来了。 =ibuffer= 给我的感觉是：设计的很原始，虽说提供
了很多配置项，但往往是配置了很久结果都不如意，我之前每次打开 =ibuffer=
之后就直接推出了，完全用不起来，哈哈哈。

如果你也和我一样，只是想要一个快速切换 Buffer 的机制，我很推荐你使用一
下 =bs= 这个内置包！
* 给自己的网站添加 favicon 图标
CREATE: <2022-01-17 Mon 14:37>

只要在网页的 head 部分添加以下代码就好了，你可以给每个网页设置不同的
favicon。（我这里说的只是其中的一种方法，其他方法可以参考[[https://blog.csdn.net/guzhao593/article/details/93972193][这里]]。）

#+begin_src html
  <link rel="shortcut icon" href="图标地址" type="image/x-icon" />
  <!-- 或者如下，我用的是这个 -->
  <link rel="shortcut icon" href="图标地址" />
#+end_src

鸣谢：本网站现在用的 favicon 来自[[http://www.mrven.com/node/103][这里]]。

* 终于还是用上了 =org-publish= ，备份一下参考链接
CREATE: <2022-01-16 Sun 20:23>

单纯不想放到浏览器的书签栏里，放在博客做归档挺好的

- [[https://vincent.demeester.fr/posts/2020-03-22-org-mode-website.html][Migrating to an org-mode website]]
- [[https://thibaultmarin.github.io/blog/posts/2016-11-13-Personal_website_in_org.html#org3371cfb][Personal website in org]]
- [[http://www.zhangjiee.com/blog/2019/build-site-with-org-mode.html][使用 org-mode 搭建网站]]
- [[https://www.taingram.org/blog/org-mode-blog.html][Building a Emacs Org-Mode Blog]]
- [[https://www.shellcodes.org/Emacs/%E4%BD%BF%E7%94%A8Org-Mode%E7%94%9F%E6%88%90%E5%8D%9A%E5%AE%A2.html][使用 Org-Mode 生成博客]]
- [[https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html][Publishing Org-mode files to HTML]]
- [[https://emacs.stackexchange.com/questions/18818/creating-a-menu-from-file-directory-structure-upon-html-export][Creating a menu from file / directory structure upon html export]]
* Org publish

一开始是想给我的博客主页添加一个导航栏的（后来搜索发现准确的名字叫
preamble），然后就发现了 =org-publish= 这个东西

由于我现在是用 org-export 来书写我的博客的，感觉很简单好用，感觉
=org-publish= 把问题复杂化了，一开始就有点抵触，刚刚突然意识到
=org-publish= 相对于 org-export 来管理博客的好处： *不需要一个一个文件的导出 html*

而且我现在如果不用 =org-publish= 的方案，我添加 =preamble= 是通过
=.dir-locals.el= 的方式实现的，比较烦人的一点是每次打开博客文件夹都会
弹出一个 =.dir-locals.el= 的警告。用 =org-publish= 就不会。

而且一开始我不想用 =org-publish= 的一个原因是：我以为用 =org-publish=
就要为我的博客写死一些配置，以后变起来很比较麻烦，不灵活，刚刚才意识到
并不会，因为 =org-publish-project-alist= 是一个 alist，我的博客的配置
只是这个 alist 中的一项。所以不存在写死的说法，反而会很灵活。

这么说起来 =org-publish= 除了配置麻烦点外，好处多多，之后如果
=org-export= 的方案遇到瓶颈了可以转投 =org-publish= 的怀抱。

* [[https://www.linuxmi.com/ubuntu-20-04-gnu-emacs-27-1.html][编译安装]]svg支持

我用的Linux Mint 20，主要是需要安装下面的[[https://ubuntuforums.org/showthread.php?t=2215649][lib]]
#+begin_src shell
  sudo apt install librsvg2-dev
#+end_src

